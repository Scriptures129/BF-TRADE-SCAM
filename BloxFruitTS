-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Verify and create events if necessary
local function getOrCreateRemoteEvent(eventName)
    local event = ReplicatedStorage:FindFirstChild(eventName)
    if not event then
        event = Instance.new("RemoteEvent")
        event.Name = eventName
        event.Parent = ReplicatedStorage
        print(eventName .. " created in ReplicatedStorage")
    else
        print(eventName .. " found in ReplicatedStorage")
    end
    return event
end

-- Get or create the required events
local updateFruitsEvent = getOrCreateRemoteEvent("UpdateFruitsEvent")
local freezeEvent = getOrCreateRemoteEvent("FreezeEvent")
local readyTradeEvent = getOrCreateRemoteEvent("ReadyTradeEvent")

-- Initialize the GUI
local gui = Instance.new("ScreenGui")
gui.Name = "BFTradeScamGUI"
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0.5, -100, 0.5, -75)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Parent = gui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = frame

-- Drag functionality
local dragging = false
local dragInput, dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

-- Title Bar
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 25)
title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
title.Text = "BF Trade Scam"
title.TextColor3 = Color3.new(1, 1, 1)
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = frame

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 15, 0, 15)
minimizeButton.Position = UDim2.new(1, -20, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
minimizeButton.BorderSizePixel = 0
minimizeButton.Text = "—"
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.TextScaled = true
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Parent = title

-- Content Holder
local content = Instance.new("Frame")
content.Name = "Content"
content.Size = UDim2.new(1, 0, 1, -25)
content.Position = UDim2.new(0, 0, 0, 25)
content.BackgroundTransparency = 1
content.Parent = frame

-- Minimize Logic
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    content.Visible = not isMinimized
    frame.Size = isMinimized and UDim2.new(0, 200, 0, 25) or UDim2.new(0, 200, 0, 150)
end)

-- Create Buttons with Checkboxes
local function createButton(name, text, position, callback)
    local buttonFrame = Instance.new("Frame")
    buttonFrame.Name = name
    buttonFrame.Size = UDim2.new(1, -20, 0, 30)
    buttonFrame.Position = position
    buttonFrame.BackgroundTransparency = 1
    buttonFrame.Parent = content

    local buttonText = Instance.new("TextLabel")
    buttonText.Size = UDim2.new(0.8, 0, 1, 0)
    buttonText.BackgroundTransparency = 1
    buttonText.Text = text
    buttonText.TextColor3 = Color3.new(1, 1, 1)
    buttonText.TextScaled = true
    buttonText.Font = Enum.Font.Gotham
    buttonText.TextXAlignment = Enum.TextXAlignment.Left
    buttonText.Parent = buttonFrame

    local checkbox = Instance.new("TextButton")
    checkbox.Name = "Checkbox"
    checkbox.Size = UDim2.new(0, 20, 0, 20)
    checkbox.Position = UDim2.new(1, -25, 0.5, -10)
    checkbox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    checkbox.BorderSizePixel = 2
    checkbox.AutoButtonColor = false
    checkbox.Parent = buttonFrame

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 4)
    uiCorner.Parent = checkbox

    local checkSign = Instance.new("TextLabel")
    checkSign.Name = "CheckSign"
    checkSign.Size = UDim2.new(1, 0, 1, 0)
    checkSign.BackgroundTransparency = 1
    checkSign.Text = "✓"
    checkSign.TextColor3 = Color3.new(1, 1, 1)
    checkSign.TextScaled = true
    checkSign.Font = Enum.Font.GothamBold
    checkSign.Visible = false
    checkSign.Parent = checkbox

    checkbox.MouseButton1Click:Connect(function()
        checkSign.Visible = not checkSign.Visible
        callback(checkSign.Visible)
    end)
end

-- Function to get the other player in the trade
local function getOtherPlayerInTrade()
    -- Logic to determine the other player in the trade
    -- Replace this with your actual implementation based on your game's trade system
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            return player
        end
    end
end

-- Add buttons to the content frame
createButton("ReplaceFruits", "Start Trade Scam", UDim2.new(0, 10, 0, 10), function(isChecked)
    if isChecked then
        print("Replace Fruits triggered")
        updateFruitsEvent:FireServer(LocalPlayer, "TrashFruitID")
    end
end)

createButton("FreezeTrade", "Start Freeze Trade", UDim2.new(0, 10, 0, 50), function(isChecked)
    print("Freeze Trade triggered:", isChecked)
    local otherPlayer = getOtherPlayerInTrade()
    if otherPlayer then
        freezeEvent:FireServer(otherPlayer, isChecked)
    end
end)

createButton("AutoReadyTrade", "Auto Ready Trade", UDim2.new(0, 10, 0, 90), function(isChecked)
    if isChecked then
        print("Auto Ready Trade triggered")
        local otherPlayer = getOtherPlayerInTrade()
        if otherPlayer then
            -- Automatically click the "Ready" button for the other player
            local otherReadyButton = otherPlayer:WaitForChild("TradeGUI"):WaitForChild("ReadyButton")
            otherReadyButton.MouseButton1Click:Fire()

            -- Freeze the other player's POV (freeze event for the other player)
            freezeEvent:FireServer(otherPlayer, true)
        end
    end
end)

print("BFTradeScam GUI with minimize functionality successfully loaded.")
